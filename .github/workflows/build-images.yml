name: Build Images
on:
  workflow_dispatch:
  workflow_run:
    workflows: ['CI - Node.js']
    types:
      - completed
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    name: Build (Image)
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20.x]
        apps: [client, api, new-api]
        site_tlds: [dev]

    steps:
      - name: Checkout Source Files
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Create a tagname
        id: tagname
        run: |
          echo "tagname=$(git rev-parse --short HEAD)-$(date +%Y%m%d)-$(date +%H%M)" >> $GITHUB_ENV

      - name: Build & Tag Image
        run: |
          docker build \
            --build-arg HOME_LOCATION=http://localhost:8000 \
            --build-arg API_LOCATION=http://localhost:3000 \
            --build-arg FORUM_LOCATION=https://forum.freecodecamp.org \
            --build-arg NEWS_LOCATION=https://www.freecodecamp.org/news \
            --build-arg RADIO_LOCATION=https://coderadio.freecodecamp.org \
            --build-arg CLIENT_LOCALE=english \
            --build-arg CURRICULUM_LOCALE=english \
            --build-arg SHOW_LOCALE_DROPDOWN_MENU=false \
            --build-arg ALGOLIA_APP_ID=app_id_from_algolia_dashboard \
            --build-arg ALGOLIA_API_KEY=api_key_from_algolia_dashboard \
            --build-arg STRIPE_PUBLIC_KEY=pk_from_stripe_dashboard \
            --build-arg PAYPAL_CLIENT_ID=id_from_paypal_dashboard \
            --build-arg PATREON_CLIENT_ID=id_from_patreon_dashboard \
            --build-arg DEPLOYMENT_ENV=staging \
            --build-arg SHOW_UPCOMING_CHANGES=false \
            --build-arg SHOW_NEW_CURRICULUM=true \
            --build-arg GROWTHBOOK_URI=api_URI_from_Growthbook_dashboard \
            --build-arg FREECODECAMP_NODE_ENV=development \
            --tag registry.digitalocean.com/${{ secrets.DOCR_NAME }}/${{ matrix.site_tlds }}/learn-${{ matrix.apps }}:$tagname \
            --file docker/${{ matrix.apps }}/Dockerfile .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Push image to DigitalOcean Container Registry
        run: |
          docker push registry.digitalocean.com/${{ secrets.DOCR_NAME }}/${{ matrix.site_tlds }}/learn-${{ matrix.apps }}:$tagname
          docker push registry.digitalocean.com/${{ secrets.DOCR_NAME }}/${{ matrix.site_tlds }}/learn-${{ matrix.apps }}:latest
